<UserControl x:Class="HealthTracker.Administration.Views.MealTemplateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cntrl="clr-namespace:Controls;assembly=Controls"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
  <UserControl.InputBindings>
    <KeyBinding Key="Y"
                Modifiers="Control"
                Command="{Binding Path=RedoCommand}"></KeyBinding>
    <KeyBinding Key="Z"
                Modifiers="Control"
                Command="{Binding Path=UndoCommand}"></KeyBinding>
  </UserControl.InputBindings>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"></ColumnDefinition>
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="*"></RowDefinition>
      <RowDefinition Height="Auto"></RowDefinition>
    </Grid.RowDefinitions>

    <Grid Grid.Row="0"
          Grid.Column="0"
          Margin="5">

      <Grid.Resources>
        <DataTemplate DataType="{x:Type ValidationError}">
          <TextBlock FontStyle="Italic"
                     Foreground="Red"
                     HorizontalAlignment="Right"
                     Margin="0,1"
                     TextWrapping="WrapWithOverflow"
                     Text="{Binding Path=ErrorContent}" />
        </DataTemplate>
      </Grid.Resources>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"></ColumnDefinition>
        <ColumnDefinition Width="*"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
        <RowDefinition Height="*"></RowDefinition>
      </Grid.RowDefinitions>

      <TextBlock Grid.Row="0"
                 Grid.Column="0"
                 Margin="5">Name:</TextBlock>
      <TextBox x:Name="nameEntry"
               Grid.Row="0"
               Grid.Column="1"
               Text="{Binding Path=Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
               SpellCheck.IsEnabled="True"
               Margin="5,5,0,5">
        <TextBox.InputBindings>
          <KeyBinding Key="Y"
                      Modifiers="Control"
                      Command="{Binding Path=RedoCommand}"></KeyBinding>
          <KeyBinding Key="Z"
                      Modifiers="Control"
                      Command="{Binding Path=UndoCommand}"></KeyBinding>
        </TextBox.InputBindings>
      </TextBox>
      <ContentPresenter Grid.Row="1"
                        Grid.Column="1"
                        Content="{Binding ElementName=nameEntry, Path=(Validation.Errors).CurrentItem}" />

      <TextBlock Grid.Row="2"
                 Grid.Column="0"
                 Margin="5">Meal Type:</TextBlock>
      <ComboBox Grid.Row="2"
                Grid.Column="1"
                Margin="5"
                DisplayMemberPath="Name"
                ItemsSource="{Binding Path=ValidMealTypes.Items}"
                SelectedItem="{Binding Path=TypeOfMeal, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"></ComboBox>

      <TextBlock Grid.Row="3"
                 Grid.Column="0"
                 Margin="5">Time of Meal:</TextBlock>

      <cntrl:TimeEditor Grid.Row="3"
                        Grid.Column="1"
                        Margin="5"
                        BorderBrush="Silver"
                        BorderThickness="1"
                        CurrentTime="{Binding Path=TimeOfMeal, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
        <!--TODO: This is not working.  Figure out why...-->
        <cntrl:TimeEditor.InputBindings>
          <KeyBinding Key="Y"
                      Modifiers="Control"
                      Command="{Binding Path=RedoCommand}"></KeyBinding>
          <KeyBinding Key="Z"
                      Modifiers="Control"
                      Command="{Binding Path=UndoCommand}"></KeyBinding>
        </cntrl:TimeEditor.InputBindings>
      </cntrl:TimeEditor>

      <Separator Grid.Row="4"
                 Grid.Column="0"
                 Grid.ColumnSpan="2"
                 Margin="0,5" />

      <Grid Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition></ColumnDefinition>
          <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"></RowDefinition>
          <RowDefinition Height="*"></RowDefinition>
          <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Margin="5">Food Servings:</TextBlock>
        <DataGrid x:Name="foodItemServingsGrid"
                  Grid.Row="1"
                  Grid.Column="0"
                  ItemsSource="{Binding Path=FoodItemServings, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  AutoGenerateColumns="False"
                  MinHeight="100"
                  MaxHeight="100"
                  Margin="5,0,15,5">
          <DataGrid.Columns>
            <DataGridComboBoxColumn Header="Food Item"
                                    Width="*"
                                    DisplayMemberPath="Name"
                                    SelectedItemBinding="{Binding Path=Entity}">
              <DataGridComboBoxColumn.ElementStyle>
                <Style TargetType="ComboBox">
                  <Setter Property="ItemsSource"
                          Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ValidFoodItems.Items}" />
                  <Setter Property="IsReadOnly"
                          Value="True" />
                </Style>
              </DataGridComboBoxColumn.ElementStyle>
              <DataGridComboBoxColumn.EditingElementStyle>
                <Style TargetType="ComboBox">
                  <Setter Property="ItemsSource"
                          Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ValidFoodItems.Items}" />
                </Style>
              </DataGridComboBoxColumn.EditingElementStyle>
            </DataGridComboBoxColumn>
            <DataGridTextColumn Header="Quantity"
                                Width="Auto"
                                Binding="{Binding Path=Quantity, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
          </DataGrid.Columns>
        </DataGrid>
        <ContentPresenter Grid.Row="3"
                          Grid.Column="0"
                          Content="{Binding ElementName=foodItemServingsGrid, Path=(Validation.Errors).CurrentItem}" />

        <TextBlock Grid.Row="0"
                   Grid.Column="1"
                   Margin="15,5,5,5">Food Groups:</TextBlock>
        <DataGrid x:Name="foodGroupServingsGrid"
                  Grid.Row="1"
                  Grid.Column="1"
                  ItemsSource="{Binding Path=FoodGroupServings}"
                  AutoGenerateColumns="False"
                  MinHeight="100"
                  MaxHeight="100"
                  Margin="15,0,5,5"
                  IsReadOnly="True">
          <DataGrid.Columns>
            <DataGridTextColumn Header="FoodGroup"
                                Width="*"
                                Binding="{Binding Path=Entity.Name}"></DataGridTextColumn>
            <DataGridTextColumn Header="Quantity"
                                Width="Auto"
                                Binding="{Binding Path=Quantity}"></DataGridTextColumn>
          </DataGrid.Columns>
        </DataGrid>
      </Grid>

      <TextBlock Grid.Row="6"
                 Grid.Column="0"
                 Margin="5">Total Calories:</TextBlock>
      <TextBlock Grid.Row="6"
                 Grid.Column="1"
                 Text="{Binding Path=Calories}"
                 Margin="5"></TextBlock>

      <Separator Grid.Row="7"
                 Grid.Column="0"
                 Grid.ColumnSpan="2"
                 Margin="0,5" />

      <TextBlock Grid.Row="8"
                 Grid.Column="0"
                 Margin="5,5,5,0">Notes:</TextBlock>
      <TextBox Grid.Row="9"
               Grid.Column="0"
               Grid.ColumnSpan="2"
               Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}"
               AcceptsReturn="True"
               AcceptsTab="True"
               SpellCheck.IsEnabled="True"
               TextWrapping="WrapWithOverflow"
               Margin="5,0,0,0">
        <TextBox.InputBindings>
          <KeyBinding Key="Y"
                      Modifiers="Control"
                      Command="{Binding Path=RedoCommand}"></KeyBinding>
          <KeyBinding Key="Z"
                      Modifiers="Control"
                      Command="{Binding Path=UndoCommand}"></KeyBinding>
        </TextBox.InputBindings>
      </TextBox>
    </Grid>

    <StackPanel Grid.Row="1"
                Grid.Column="0"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                Margin="0,0,5,5">
      <Button Command="{Binding Path=DeleteCommand}"
              Margin="0,0,5,0">Delete</Button>
      <Button Command="{Binding Path=UndoCommand}"
              Margin="0,0,5,0">Undo</Button>
      <Button Command="{Binding Path=RedoCommand}"
              Margin="0,0,5,0">Redo</Button>
      <Button Command="{Binding Path=SaveCommand}">Save</Button>
    </StackPanel>
  </Grid>
</UserControl>
